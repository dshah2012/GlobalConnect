package com.ge.tps.entities;
//

//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Contact.java
//  @ Date : 2/24/2016
//  @ Author : 
//
//

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;

// TODO: Auto-generated Javadoc
/**
 * The Class Contact.
 *
 * @author Nikhil Jain
 * @since 2016
 * @description Used to store contact information of a user
 */
@Entity
public class Contact {

	/**
	 * The contact id is used to differentiate contact details of different
	 * users.
	 */
	@Id
	@GeneratedValue
	private long contactId;

	/** The primary mobile no. of a user */
	private long primaryMobileNo;

	/** The secondary mobile no. of a user */
	private long secondaryMobileNo;

	/** The secondary mail id. of a user */
	private String secondaryMailId;

	/** The fax no. of a user */
	private String faxNo;

	/** The residence no. of a user */
	private long residenceNo;

	/** The office contact no. of a user */
	private long officeContactNo;

	/** The preferred contacts of a user. */
	@OneToMany(fetch=FetchType.EAGER, cascade = CascadeType.ALL)
	@JoinColumn(name="contactId")
	private List<PreferredContact> preferredContacts;
	

	/** The current address of a user. */
	@OneToOne(cascade=CascadeType.ALL)
	@JoinColumn(name = "currentAddress")
	private Address currentAddress;

	/** The office address of a user. */
	@OneToOne(cascade=CascadeType.ALL)
	@JoinColumn(name = "officeAddresss")
	private Address officeAddress;

	/** The permanent address of a user. */
	@OneToOne(cascade=CascadeType.ALL)
	@JoinColumn(name = "permanentAddress")
	private Address permanentAddress;

	/**
	 * Instantiates a new contact.
	 */
	public Contact() {
		this.preferredContacts=new ArrayList<>();
	}

	/**
	 * Instantiates a new contact.
	 *
	 * @param primaryMobileNo
	 *            the primary mobile no
	 * @param secondaryMobileNo
	 *            the secondary mobile no
	 * @param secondaryMailId
	 *            the secondary mail id
	 * @param faxNo
	 *            the fax no
	 * @param residenceNo
	 *            the residence no
	 * @param officeContactNo
	 *            the office contact no
	 * @param preferredContacts
	 *            the preferred contacts
	 * @param currentAddress
	 *            the current address
	 * @param officeAddress
	 *            the office address
	 * @param permanentAddress
	 *            the permanent address
	 */
	public Contact(long primaryMobileNo, long secondaryMobileNo, String secondaryMailId, String faxNo, long residenceNo,
			long officeContactNo, List<PreferredContact> preferredContacts, Address currentAddress,
			Address officeAddress, Address permanentAddress) {
		super();
		this.primaryMobileNo = primaryMobileNo;
		this.secondaryMobileNo = secondaryMobileNo;
		this.secondaryMailId = secondaryMailId;
		this.faxNo = faxNo;
		this.residenceNo = residenceNo;
		this.officeContactNo = officeContactNo;
		this.preferredContacts = preferredContacts;
		this.currentAddress = currentAddress;
		this.officeAddress = officeAddress;
		this.permanentAddress = permanentAddress;
	}

	/**
	 * Gets the contact id.
	 *
	 * @return the contact id
	 */

	public long getContactId() {
		return contactId;
	}

	/**
	 * Sets the contact id.
	 *
	 * @param contactId
	 *            the new contact id
	 */
	public void setContactId(long contactId) {
		this.contactId = contactId;
	}

	/**
	 * Gets the primary mobile no.
	 *
	 * @return the primary mobile no
	 */
	public long getPrimaryMobileNo() {
		return primaryMobileNo;
	}

	/**
	 * Sets the primary mobile no.
	 *
	 * @param primaryMobileNo
	 *            the new primary mobile no
	 */
	public void setPrimaryMobileNo(long primaryMobileNo) {
		this.primaryMobileNo = primaryMobileNo;
	}

	/**
	 * Gets the secondary mobile no.
	 *
	 * @return the secondary mobile no
	 */
	public long getSecondaryMobileNo() {
		return secondaryMobileNo;
	}

	/**
	 * Sets the secondary mobile no.
	 *
	 * @param secondaryMobileNo
	 *            the new secondary mobile no
	 */
	public void setSecondaryMobileNo(long secondaryMobileNo) {
		this.secondaryMobileNo = secondaryMobileNo;
	}

	/**
	 * Gets the secondary mail id.
	 *
	 * @return the secondary mail id
	 */
	public String getSecondaryMailId() {
		return secondaryMailId;
	}

	/**
	 * Sets the secondary mail id.
	 *
	 * @param secondaryMailId
	 *            the new secondary mail id
	 */
	public void setSecondaryMailId(String secondaryMailId) {
		this.secondaryMailId = secondaryMailId;
	}

	/**
	 * Gets the fax no.
	 *
	 * @return the fax no
	 */
	public String getFaxNo() {
		return faxNo;
	}

	/**
	 * Sets the fax no.
	 *
	 * @param faxNo
	 *            the new fax no
	 */
	public void setFaxNo(String faxNo) {
		this.faxNo = faxNo;
	}

	/**
	 * Gets the residence no.
	 *
	 * @return the residence no
	 */
	public long getResidenceNo() {
		return residenceNo;
	}

	/**
	 * Sets the residence no.
	 *
	 * @param residenceNo
	 *            the new residence no
	 */
	public void setResidenceNo(long residenceNo) {
		this.residenceNo = residenceNo;
	}

	/**
	 * Gets the office contact no.
	 *
	 * @return the office contact no
	 */
	public long getOfficeContactNo() {
		return officeContactNo;
	}

	/**
	 * Sets the office contact no.
	 *
	 * @param officeContactNo
	 *            the new office contact no
	 */
	public void setOfficeContactNo(long officeContactNo) {
		this.officeContactNo = officeContactNo;
	}

	/**
	 * Gets the preferred contacts.
	 *
	 * @return the preferred contacts
	 */
	public List<PreferredContact> getPreferredContacts() {
		return preferredContacts;
	}

	/**
	 * Sets the preferred contacts.
	 *
	 * @param preferredContacts
	 *            the new preferred contacts
	 */
	public void setPreferredContacts(List<PreferredContact> preferredContacts) {
		this.preferredContacts = preferredContacts;
	}

	/**
	 * Gets the current address.
	 *
	 * @return the current address
	 */
	public Address getCurrentAddress() {
		return currentAddress;
	}

	/**
	 * Sets the current address.
	 *
	 * @param currentAddress
	 *            the new current address
	 */
	public void setCurrentAddress(Address currentAddress) {
		this.currentAddress = currentAddress;
	}

	/**
	 * Gets the office address.
	 *
	 * @return the office address
	 */
	public Address getOfficeAddress() {
		return officeAddress;
	}

	/**
	 * Sets the office address.
	 *
	 * @param officeAddress
	 *            the new office address
	 */
	public void setOfficeAddress(Address officeAddress) {
		this.officeAddress = officeAddress;
	}

	/**
	 * Gets the permanent address.
	 *
	 * @return the permanent address
	 */
	public Address getPermanentAddress() {
		return permanentAddress;
	}

	/**
	 * Sets the permanent address.
	 *
	 * @param permanentAddress
	 *            the new permanent address
	 */
	public void setPermanentAddress(Address permanentAddress) {
		this.permanentAddress = permanentAddress;
	}

	@Override
	public String toString() {
		return "Contact [contactId=" + contactId + ", primaryMobileNo=" + primaryMobileNo + ", secondaryMobileNo="
				+ secondaryMobileNo + ", secondaryMailId=" + secondaryMailId + ", faxNo=" + faxNo + ", residenceNo="
				+ residenceNo + ", officeContactNo=" + officeContactNo + ", preferredContacts=" + preferredContacts
				+ ", currentAddress=" + currentAddress + ", officeAddress=" + officeAddress + ", permanentAddress="
				+ permanentAddress + "]";
	}
	
}
